== История создания приложения

Программа "Домашние финансы" была разработана в качестве удобного онлайн инструмента
для учета и мониторинга семейного бюджета. Попытки выяснить куда деваются деньги, заработанные
столь тяжким трудом предпринимались и ранее, но все сводилось к не очень эффектному и эффективному
ведению бухгалтерии в Excel.

В июне 2011 года мной была предпринята первая попытка реализовать удобное web-приложение домашней бухгалтерии.
Приложение было готово в сентябре 2011 года. Оно было реализовано на языке Java с использованием фреймворков
Spring (http://www.springsource.org) и Hibernate 3 (http://www.hibernate.org).

На роль основной UI библиотеки был выбран популярный javascript фреймворк ExtJS (http://www.sencha.com/products/extjs3) 3-й версии.
В качестве web сервера использовался Tomcat 7 (http://tomcat.apache.org/download-70.cgi). Приложение было выложено на облачный хостинг
Jelastic (http://jelastic.com) и размещалось на нем вплоть до апреля 2012 года, когда кончился период бета-тестирования платформы Jelastic.

В конце апреля 2012 была начата работа над текущей второй версией программы "Домашние финансы". 

Теперь разработка велась на языке  Ruby (http://www.ruby-lang.org/en/) с использованием мощного фреймворка Rails (http://rubyonrails.org).
Основной функционал был готов к июню 2012 года. 
Тогда же и началось открытое тестирование приложения, размещенного на облачном хостинге Heroku (http://www.heroku.com/). 
В период с июня по середину августа 2012 года проводился рефакторинг кода, исправлялись ошибки и улучшался дизайн. 
В конце августа 2012 года был полностью переработан интефейс сайта с использованием популярного
javascript и css фреймворка Twitter Bootsrap (http://twitter.github.com/bootstrap/index.html).

Данный подход позволил избежать необходимости реализовывать дополнительную мобильную версию сайта для планшетов и телефонов.

В с марта по май 2013 года была произведена большая переработка функционала сайта: 
* Серверный код был полностью покрыт тестами с использованием библиотеки RSpec (http://http://rspec.info/)
* Был заменен фреймворк, отвечающий за отрисовку графиков статистики. Теперь это amcharts (http://www.amcharts.com/). 
* Функционал статистики был полностью переписан.
* Модель транзакции была отрефакторена
* Код контроллеров был отрефакторен и переписан для реализации иных механизмов CRUD
* Иерархия шаблонов была изменена и расширена с соблюдением принципов DRY
* Наиболее часто используемый функционал (работf с транзакциями) был полностью переведен на AJAX
* Добавлен gem turbolinks для ускорения навигации в приложении
